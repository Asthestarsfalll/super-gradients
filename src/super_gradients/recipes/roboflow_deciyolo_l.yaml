defaults:
  - training_hyperparams: coco2017_deciyolo_train_params
  - dataset_params: roboflow_detection_dataset_params
  - checkpoint_params: default_checkpoint_params
  - arch_params: deciyolo_l_arch_params
  - _self_


train_dataloader: coco2017_train_deci_yolo
val_dataloader: coco2017_val_deci_yolo
dataset_name: ??? # Placeholder for the name of the dataset you want to use (e.g. "digits-t2eg6")
dataset_params:
  dataset_name: ${dataset_name}

  train_dataloader_params:
    batch_size: 16

  val_dataset_params:
    batch_size: 16

num_classes: ${roboflow_dataset_num_classes:${dataset_name}}


architecture: deciyolo_l
arch_params:
  num_classes: ${num_classes}




load_checkpoint: False
checkpoint_params:
  pretrained_weights: coco


result_path: # By defaults saves results in checkpoints directory
resume: False
training_hyperparams:
  resume: ${resume}
  max_epochs: 100
  mixed_precision: True
  criterion_params:
    num_classes: ${num_classes}
#  lr_warmup_epochs: 0
#  lr_cooldown_epochs: 0
#  initial_lr: 1e-4
  phase_callbacks:
    - RoboflowResultCallback:
        dataset_name: ${dataset_name}
        output_path: ${result_path}
  loss:
    ppyoloe_loss:
      num_classes: ${num_classes}
      reg_max: 16

  valid_metrics_list:
    - DetectionMetrics:
        score_thres: 0.1
        top_k_predictions: 300
        num_cls: ${num_classes}
        normalize_targets: True
        post_prediction_callback:
          _target_: super_gradients.training.models.detection_models.pp_yolo_e.PPYoloEPostPredictionCallback
          score_threshold: 0.01
          nms_top_k: 1000
          max_predictions: 300
          nms_threshold: 0.7

  sg_logger: "wandb_sg_logger"
  sg_logger_params:
    project_name: DeciYolo-RF100
    entity: super-gradients
    api_server: "https://wandb.research.deci.ai"
    save_checkpoints_remote: True
    save_tensorboard_remote: True
    save_logs_remote: True


multi_gpu: DDP
num_gpus: 8
experiment_name: ${architecture}_roboflow_${dataset_name}
ckpt_root_dir:


# THE FOLLOWING PARAMS ARE DIRECTLY USED BY HYDRA
hydra:
  run:
    # Set the output directory (i.e. where .hydra folder that logs all the input params will be generated)
    dir: ${hydra_output_dir:${ckpt_root_dir}, ${experiment_name}}
