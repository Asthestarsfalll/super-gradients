from super_gradients.common.registry.registry_utils import create_register_decorator

from super_gradients.training.utils.callbacks import LR_SCHEDULERS_CLS_DICT
from super_gradients.common.sg_loggers import SG_LOGGERS
from super_gradients.training.dataloaders.dataloaders import ALL_DATALOADERS
from super_gradients.training.models.all_architectures import ARCHITECTURES
from super_gradients.training.metrics.all_metrics import METRICS
from super_gradients.modules.detection_modules import ALL_DETECTION_MODULES
from super_gradients.training.utils.callbacks.all_callbacks import CALLBACKS
from super_gradients.training.transforms.all_transforms import TRANSFORMS
from super_gradients.training.datasets.all_datasets import ALL_DATASETS
from super_gradients.training.pre_launch_callbacks import ALL_PRE_LAUNCH_CALLBACKS
from super_gradients.training.models.segmentation_models.unet.unet_encoder import BACKBONE_STAGES
from super_gradients.training.models.segmentation_models.unet.unet_decoder import UP_FUSE_BLOCKS
from super_gradients.training.datasets.all_target_generators import ALL_TARGET_GENERATORS
from super_gradients.training.datasets.all_collate_functions import ALL_COLLATE_FUNCTIONS
from super_gradients.training.datasets.samplers.all_samplers import SAMPLERS
from super_gradients.training.utils.optimizers import OPTIMIZERS


register_model = create_register_decorator(items=ARCHITECTURES)
register_detection_module = create_register_decorator(items=ALL_DETECTION_MODULES)
register_metric = create_register_decorator(items=METRICS)
register_dataloader = create_register_decorator(items=ALL_DATALOADERS)
register_callback = create_register_decorator(items=CALLBACKS)
register_transform = create_register_decorator(items=TRANSFORMS)
register_dataset = create_register_decorator(items=ALL_DATASETS)
register_pre_launch_callback = create_register_decorator(items=ALL_PRE_LAUNCH_CALLBACKS)
register_unet_backbone_stage = create_register_decorator(items=BACKBONE_STAGES)
register_unet_up_block = create_register_decorator(items=UP_FUSE_BLOCKS)
register_target_generator = create_register_decorator(items=ALL_TARGET_GENERATORS)
register_lr_scheduler = create_register_decorator(items=LR_SCHEDULERS_CLS_DICT)
register_sg_logger = create_register_decorator(items=SG_LOGGERS)
register_collate_function = create_register_decorator(items=ALL_COLLATE_FUNCTIONS)
register_sampler = create_register_decorator(items=SAMPLERS)
register_optimizer = create_register_decorator(items=OPTIMIZERS)
