defaults:
  - training_hyperparams: coco2017_yolo_nas_pose_train_params
  - dataset_params: crowdpose_yolo_nas_dataset_params
  - arch_params: yolo_nas_pose_s_arch_params
  - checkpoint_params: default_checkpoint_params
  - _self_
  - variable_setup

architecture: yolo_nas_pose_s

multi_gpu: DDP
num_gpus: 4

# Assemble experiment suffix
bbox_cls_loss_suffix: box_${training_hyperparams.criterion_params.classification_loss_type}_${training_hyperparams.criterion_params.classification_loss_weight}
bbox_reg_loss_suffix: ${training_hyperparams.criterion_params.regression_iou_loss_type}_${training_hyperparams.criterion_params.iou_loss_weight}_dfl_${training_hyperparams.criterion_params.dfl_loss_weight}
pose_cls_loss_suffix: pose_${training_hyperparams.criterion_params.pose_classification_loss_type}_${training_hyperparams.criterion_params.pose_cls_loss_weight}
pose_reg_loss_suffix: reg_${training_hyperparams.criterion_params.pose_reg_loss_weight}

head_suffix: head_${cond:${arch_params.heads.YoloNASPoseNDFLHeads.compensate_grid_cell_offset},comp_off,no_comp}_scale_${arch_params.heads.YoloNASPoseNDFLHeads.pose_offset_multiplier}

experiment_suffix: ""
experiment_name: crowdpose_${architecture}_${bbox_cls_loss_suffix}_${bbox_reg_loss_suffix}_${pose_cls_loss_suffix}_${pose_reg_loss_suffix}_${head_suffix}_${dataset_params.dataset_params_suffix}${experiment_suffix}

ckpt_root_dir:


arch_params:
  num_classes: ${dataset_params.num_joints}

checkpoint_params:
  # For training Yolo-NAS-S pose estimation model we use pretrained weights for Yolo-NAS-S object detection model.
  # By setting strict_load: key_matching we load only those weights that match the keys of the model.
  checkpoint_path: https://sghub.deci.ai/models/yolo_nas_s_coco.pth
  strict_load:
    _target_: super_gradients.training.sg_trainer.StrictLoad
    value: key_matching

dataset_params:
  train_dataloader_params:
    batch_size: 48

  val_dataloader_params:
    batch_size: 48
