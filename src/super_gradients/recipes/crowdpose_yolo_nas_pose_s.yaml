defaults:
  - training_hyperparams: coco2017_yolo_nas_pose_train_params
  - dataset_params: crowdpose_yolo_nas_dataset_params
  - arch_params: yolo_nas_pose_s_arch_params
  - checkpoint_params: default_checkpoint_params
  - _self_
  - variable_setup

architecture: yolo_nas_pose_s

multi_gpu: DDP
num_gpus: 8


experiment_suffix: ""
experiment_name: crowdpose_${architecture}_${experiment_suffix}

ckpt_root_dir:

arch_params:
  num_classes: ${dataset_params.num_joints}

training_hyperparams:
  phase_callbacks:
    - ExtremeBatchPoseEstimationVisualizationCallback:
        keypoint_colors: ${dataset_params.keypoint_colors}
        edge_colors: ${dataset_params.edge_colors}
        edge_links: ${dataset_params.edge_links}
        loss_to_monitor: YoloNASPoseLoss/loss
        max: True
        freq: 1
        max_images: 16
        enable_on_train_loader: True
        enable_on_valid_loader: True
        post_prediction_callback:
          _target_: super_gradients.training.models.pose_estimation_models.yolo_nas_pose.YoloNASPosePostPredictionCallback
          pose_confidence_threshold: 0.1
          nms_iou_threshold: 0.7
          pre_nms_max_predictions: 300
          post_nms_max_predictions: 30

    - EarlyStop:
        phase:
          _target_: super_gradients.training.utils.callbacks.base_callbacks.Phase
          value: VALIDATION_EPOCH_END
        monitor: AP
        mode: max
        min_delta: 0.0001
        patience: 100
        verbose: True

  ema: True
  ema_params:
    decay_type: exp
    beta: 50

checkpoint_params:
  # For training Yolo-NAS-S pose estimation model we use pretrained weights for Yolo-NAS-S object detection model.
  # By setting strict_load: key_matching we load only those weights that match the keys of the model.
  checkpoint_path: https://sghub.deci.ai/models/yolo_nas_s_coco.pth
  strict_load:
    _target_: super_gradients.training.sg_trainer.StrictLoad
    value: key_matching

dataset_params:
  train_dataloader_params:
    batch_size: 56
    num_workers: 16
    persistent_workers: True

  val_dataloader_params:
    batch_size: 56
    num_workers: 8
    persistent_workers: True
